name: Release

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            filename: yaks-linux-x86_64
            extension: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            filename: yaks-windows-x86_64
            extension: .exe
          - os: macos-latest
            target: aarch64-apple-darwin
            filename: yaks-macos-aarch64
            extension: ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build with Cargo
        run: cargo build --release --package yaks-tui --target ${{ matrix.target }}

      - name: Rename executable
        shell: bash
        run: |
          mv target/${{ matrix.target }}/release/yaks-tui${{ matrix.extension }} ${{ matrix.filename }}${{ matrix.extension }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.filename }}
          path: ${{ matrix.filename }}${{ matrix.extension }}

  release:
    name: Create Nightly Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Delete old nightly release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release delete nightly --cleanup-tag --yes || true

      - name: Create new nightly release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly Build
          draft: false
          prerelease: true
          files: artifacts/**/*